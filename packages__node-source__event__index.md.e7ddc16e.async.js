(self["webpackChunkFE_note"]=self["webpackChunkFE_note"]||[]).push([[6016],{1422:e=>{"use strict";e.exports={}},3859:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>a});const a={}},8411:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>r});var a=t(7294),c=t(6584),s=t(2196);t(3859);const r=e=>(a.useEffect((()=>{null!==e&&void 0!==e&&e.location.hash&&c.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),a.createElement(a.Fragment,null,a.createElement("div",{className:"markdown"},a.createElement("h2",{id:"event-basic"},a.createElement(c.AnchorLink,{to:"#event-basic","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"event basic"),a.createElement(s.Z,{code:"const EventEmitter = require('events');\n// const EventEmitter=require('./index');\n\nconst event = new EventEmitter();\n\nconst say = (name) => console.log('say', name);\nconst run = (name) => console.log('run', name);\n\n/**\n * event.on('print',say);\n * event.on('print',run);\n * event.emit('print','cc')\n */\n\nevent.once('print', say);\nevent.once('print', run);\n\nevent.off('print', say);\nevent.emit('print', 'cc');\nevent.emit('print', 'wgs');",lang:"js"}),a.createElement("h2",{id:"event-\u5b9e\u73b0"},a.createElement(c.AnchorLink,{to:"#event-\u5b9e\u73b0","aria-hidden":"true",tabIndex:-1},a.createElement("span",{className:"icon icon-link"})),"event \u5b9e\u73b0"),a.createElement(s.Z,{code:"class EventEmitter {\n  constructor() {\n    this._events = {};\n  }\n  on(eventName, fn) {\n    (this._events[eventName] || (this._events[eventName] = [])).push(fn);\n  }\n  emit(eventName, ...args) {\n    const curEventArr = this._events[eventName];\n    if (curEventArr) {\n      curEventArr.forEach((event) => event(...args));\n    }\n  }\n  off(eventName, fn) {\n    this._events[eventName] = this._events[eventName].filter(\n      (event) => event !== fn && event.l !== fn,\n    );\n  }\n  once(eventName, fn) {\n    const callback = (...args) => {\n      fn(...args);\n      this.off(eventName, fn);\n    };\n    callback.l = fn;\n    this.on(eventName, callback);\n  }\n}",lang:"js"}))))}}]);